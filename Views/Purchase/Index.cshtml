@model IEnumerable<GSoftPosNew.Models.Purchase>

@{
    ViewData["Title"] = "Purchase Report";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Safe list + quick metrics (front-end only)
    var list = Model?.ToList() ?? new List<GSoftPosNew.Models.Purchase>();
    int invoicesCount = list.Count;
    int pendingCount = list.Count(p => string.Equals(p.Status, "Pending", StringComparison.OrdinalIgnoreCase));
    int completedCount = list.Count(p => string.Equals(p.Status, "Completed", StringComparison.OrdinalIgnoreCase));

    // CHANGE HERE if your total field name differs:
    decimal totalPurchase = list.Sum(p => (decimal?)p.TotalAmount ?? 0m);

    // Build suggestions for datalist (supplier names + reference/invoice nos)
    var suggest = list
        .SelectMany(p => new[] {
            p.Supplier?.SupplierName,
            p.ReferenceNo
                })
        .Where(s => !string.IsNullOrWhiteSpace(s))
        .Distinct(StringComparer.OrdinalIgnoreCase)
        .Take(400)
        .ToList();
}

<!-- ========= Light, professional theme (green/blue + tiny yellow) ========= -->
<style>
    :root {
        --bg: #f8fafc; /* slate-50 */
        --card: #ffffff;
        --line: #e2e8f0; /* slate-200 */
        --ink: #0f172a; /* slate-900 */
        --muted: #64748b; /* slate-500 */
        --green: #10b981; /* emerald-500 */
        --blue: #2563eb; /* blue-600 */
        --blue-2: #60a5fa; /* blue-400 */
        --amber: #f59e0b; /* amber-500 */
        --shadow: 0 10px 28px rgba(2,6,23,.06);
    }

    body {
        background: var(--bg);
    }

    /* Compact header */
    .page-head {
        background: linear-gradient(135deg, #e7fbf2 0%, #eaf3ff 100%);
        border: 1px solid #dbeafe;
        border-radius: 14px;
        padding: 10px 12px; /* smaller than before */
        margin: 10px 0 12px 0;
        position: relative;
    }

        .page-head::after {
            content: "";
            position: absolute;
            left: 14px;
            right: 14px;
            bottom: 0;
            height: 2px;
            border-radius: 999px;
            background: linear-gradient(90deg, #bbf7d0 0%, #93c5fd 60%, #fde68a 100%);
            opacity: .9;
        }

    .ph-row {
        display: flex;
        align-items: center;
        gap: 10px;
        flex-wrap: wrap;
    }

    .ph-title {
        margin: 0;
        font-weight: 800;
        color: #0b1220;
        letter-spacing: .2px;
        display: flex;
        align-items: center;
        gap: .55rem;
        font-size: 1.25rem;
    }

    .ph-right {
        margin-left: auto;
        display: flex;
        align-items: center;
        gap: 8px;
        flex-wrap: wrap;
    }

    .clock-pill {
        background: #fff;
        border: 1px solid var(--line);
        border-radius: 999px;
        padding: .30rem .6rem;
        font-weight: 700;
        color: var(--ink);
        font-size: .95rem;
    }

    .card {
        background: var(--card);
        border: 1px solid var(--line);
        border-radius: 14px;
        box-shadow: var(--shadow);
        overflow: hidden;
    }

    /* Filters row: horizontal */
    .filters-row {
        display: flex;
        align-items: end;
        gap: 10px;
        flex-wrap: nowrap;
        overflow-x: auto;
        padding: 8px 4px;
    }

        .filters-row .filter-item {
            min-width: 240px;
        }

            .filters-row .filter-item.narrow {
                min-width: 180px;
            }

    .form-label {
        font-weight: 600;
        color: var(--ink);
        margin-bottom: .25rem;
    }

    .input-group-text {
        background: #f1f5f9;
    }

    .filters-row .form-control,
    .filters-row .form-select,
    .filters-row .input-group {
        height: 40px;
    }

    .btn-apply {
        height: 40px;
        white-space: nowrap;
        border-radius: 10px;
    }

    /* Totals strip under filters */
    .totals-strip {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        padding: 10px 12px;
        border: 1px dashed var(--line);
        border-radius: 12px;
        background: #ffffff;
    }

    .tchip {
        display: inline-flex;
        align-items: center;
        gap: .5rem;
        padding: .42rem .75rem;
        border-radius: 12px;
        font-weight: 800;
        border: 1px solid transparent;
    }

    .t-inv {
        background: #eff6ff;
        color: #1e3a8a;
        border-color: #bfdbfe;
    }

    .t-pur {
        background: #ecfdf5;
        color: #065f46;
        border-color: #a7f3d0;
    }

    .t-pen {
        background: #fffbeb;
        color: #92400e;
        border-color: #fcd34d;
    }

    .t-com {
        background: #eef2ff;
        color: #3730a3;
        border-color: #c7d2fe;
    }

    /* Table */
    .table-responsive {
        border: 1px solid var(--line);
        border-radius: 12px;
        overflow: auto;
    }

    .table thead th {
        position: sticky;
        top: 0;
        z-index: 2;
        background: #f1f5f9 !important;
        color: var(--ink);
        border-bottom: 1px solid var(--line);
        font-weight: 800;
        letter-spacing: .02em;
        white-space: nowrap;
    }

    .table-hover tbody tr:hover {
        background: #f8fafc !important;
    }

    .num {
        text-align: right;
        font-weight: 600;
    }

    /* Bottom actions */
    .action-bar {
        display: flex;
        align-items: center;
        gap: 10px;
        flex-wrap: wrap;
        justify-content: space-between;
        margin-top: 14px;
    }

    .ab-left {
        color: var(--muted);
    }

    .ab-right {
        display: flex;
        gap: 8px;
        flex-wrap: wrap;
    }

    .btn-soft {
        border: 1px solid var(--line);
        background: #fff;
        color: var(--ink);
        border-radius: 10px;
        padding: .5rem .85rem;
        font-weight: 700;
        display: inline-flex;
        align-items: center;
        gap: .45rem;
    }

    .btn-print {
        background: #eff6ff;
        color: #1e3a8a;
        border-color: #bfdbfe;
    }

    .btn-clear {
        background: #fffbeb;
        color: #7c2d12;
        border-color: #fcd34d;
    }

    .btn-exit {
        background: #ecfdf5;
        color: #065f46;
        border-color: #a7f3d0;
    }

    .pagination .page-link {
        border-radius: 10px;
    }
</style>

<div class="container-fluid mt-2">
    <!-- ===== Compact Page Header ===== -->
    <div class="page-head">
        <div class="ph-row">
            <h2 class="ph-title">
                <i class="fa-solid fa-file-invoice-dollar text-success"></i>
                @ViewData["Title"]
            </h2>
            <div class="ph-right">
                <div class="clock-pill" id="nowStamp"></div>
            </div>
        </div>
    </div>

    <!-- ===== Filters (HORIZONTAL) ===== -->
    <div class="card mb-3 border-0">
        <div class="card-body">
            <div class="filters-row">
                <!-- Smart Search (supplier / invoice), with suggestions -->
                <div class="filter-item" title="Search supplier, invoice/reference">
                    <label class="form-label small text-muted">Search (Supplier / Invoice)</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fa fa-search text-secondary"></i></span>
                        <input list="suggestionsList" type="text" id="searchBox" class="form-control"
                               placeholder="Type supplier or reference no...">
                        <datalist id="suggestionsList">
                            @foreach (var s in suggest)
                            {
                                <option value="@s"></option>
                            }
                        </datalist>
                    </div>
                </div>

                <!-- Supplier filter (optional exact match dropdown if you want later) -->
                <div class="filter-item">
                    <label class="form-label small text-muted">Supplier (text)</label>
                    <input type="text" id="supplierFilter" class="form-control" placeholder="Supplier name…">
                </div>

                <!-- Company filter (text contains) -->
                <div class="filter-item">
                    <label class="form-label small text-muted">Company (text)</label>
                    <input type="text" id="companyFilter" class="form-control" placeholder="Company…">
                </div>

                <!-- Start Date -->
                <div class="filter-item narrow">
                    <label class="form-label small text-muted">Start Date</label>
                    <input type="date" id="startDate" class="form-control">
                </div>

                <!-- End Date -->
                <div class="filter-item narrow">
                    <label class="form-label small text-muted">End Date</label>
                    <input type="date" id="endDate" class="form-control">
                </div>

                <!-- Status -->
                <div class="filter-item narrow">
                    <label class="form-label small text-muted">Status</label>
                    <select id="statusFilter" class="form-select">
                        <option value="">All</option>
                        <option value="Pending">Pending</option>
                        <option value="Completed">Completed</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>

                <!-- Apply -->
                <div class="filter-item">
                    <button id="filterBtn" class="btn btn-dark btn-apply">
                        <i class="fa fa-filter me-2"></i> Apply
                    </button>
                </div>
            </div>

            <!-- ===== Totals strip under filters ===== -->
            <div class="totals-strip mt-2">
                <span class="tchip t-inv"><i class="fa-regular fa-rectangle-list"></i> Invoices: @invoicesCount</span>
                <span class="tchip t-pur"><i class="fa-solid fa-sack-dollar"></i> Total Purchase: @totalPurchase.ToString("N2")</span>
                <span class="tchip t-pen"><i class="fa-solid fa-hourglass-half"></i> Pending: @pendingCount</span>
                <span class="tchip t-com"><i class="fa-solid fa-badge-check"></i> Completed: @completedCount</span>
            </div>
        </div>
    </div>

    <!-- ===== Table ===== -->
    <div class="table-responsive">
        <table class="table table-hover align-middle mb-0" id="purchaseTable">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>Date</th>
                    <th>Supplier</th>
                    <th>Company</th>
                    <th>Reference No</th>
                    <th class="num">Total (₨)</th> <!-- moved before Status -->
                    <th>Type</th>
                    <th class="text-center">Details</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in list)
                {
                    var company = p?.Supplier?.Company ?? p?.Supplier?.Company ?? "-";
                    <tr data-date="@p.Date.ToString("yyyy-MM-dd")">
                        <td class="fw-semibold">@p.Id</td>
                        <td>@p.Date.ToString("dd MMM yyyy, hh:mm tt")</td>
                        <td>@(p.Supplier?.SupplierName ?? "-")</td>
                        <td>@company</td>
                        <td>@p.ReferenceNo</td>
                        <td class="num">
                            @((decimal?)p.TotalAmount == null ? "-" : ((decimal)p.TotalAmount).ToString("N2"))
                        </td>
                        <td>@p.PurchaseType</td>
                        @* <td>
                            <span class="badge rounded-pill
                                    @(p.Status == "Completed" ? "bg-success" :
                                                                    p.Status == "Pending" ? "bg-warning text-dark" :
                                                                    p.Status == "Cancelled" ? "bg-danger" : "bg-secondary")">
                                @p.Status
                            </span>
                        </td> *@
                        <td class="text-center">
                            <a asp-action="Details" asp-route-id="@p.Id" class="btn btn-sm btn-outline-info">
                                <i class="fa fa-eye me-1"></i> View
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- ===== Bottom actions & pagination ===== -->
    <div class="action-bar">
        <div class="ab-left small">
            Showing <strong>@invoicesCount</strong> record(s)
        </div>
        <div class="ab-right">
            <button type="button" class="btn-soft btn-print" id="btnPrint"><i class="fa-solid fa-print"></i> Print</button>
            <button type="button" class="btn-soft btn-clear" id="btnClear"><i class="fa-regular fa-circle-xmark"></i> Clear</button>
            <a asp-controller="Home" asp-action="Index" class="btn-soft btn-exit"><i class="fa-solid fa-right-from-bracket"></i> Exit</a>
            <nav aria-label="Page nav" class="ms-1">
                <ul class="pagination pagination-sm mb-0">
                    <li class="page-item disabled"><span class="page-link">Prev</span></li>
                    <li class="page-item active"><span class="page-link">1</span></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item"><a class="page-link" href="#">Next</a></li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // live timestamp in header
        (function tick(){
            const el = document.getElementById('nowStamp');
            if(el){
                const d = new Date();
                el.textContent = d.toLocaleString([], {year:'numeric', month:'short', day:'2-digit', hour:'2-digit', minute:'2-digit'});
            }
            setTimeout(tick, 1000);
        })();

        // Apply filters (client-side only)
        document.getElementById("filterBtn").addEventListener("click", function () {
            const search    = (document.getElementById("searchBox").value || "").toLowerCase();
            const supplierQ = (document.getElementById("supplierFilter").value || "").toLowerCase();
            const companyQ  = (document.getElementById("companyFilter").value || "").toLowerCase();
            const status    = document.getElementById("statusFilter").value;
            const start     = document.getElementById("startDate").value;
            const end       = document.getElementById("endDate").value;

            const startDate = start ? new Date(start + "T00:00:00") : null;
            const endDate   = end   ? new Date(end   + "T23:59:59") : null;

            let rows = document.querySelectorAll("#purchaseTable tbody tr");

            rows.forEach(row => {
                const dateIso   = row.getAttribute("data-date"); // yyyy-MM-dd
                const rowDate   = dateIso ? new Date(dateIso + "T12:00:00") : null; // noon to avoid TZ edges
                const supplier  = row.cells[2].innerText.toLowerCase();
                const company   = row.cells[3].innerText.toLowerCase();
                const reference = row.cells[4].innerText.toLowerCase();
                const rowStatus = row.cells[6].innerText.trim();

                const matchesFree = !search || supplier.includes(search) || reference.includes(search);
                const matchesSupp = !supplierQ || supplier.includes(supplierQ);
                const matchesComp = !companyQ || company.includes(companyQ);
                const matchesStat = !status || rowStatus === status;

                let matchesDate = true;
                if (startDate && rowDate && rowDate < startDate) matchesDate = false;
                if (endDate && rowDate && rowDate > endDate)     matchesDate = false;

                row.style.display = (matchesFree && matchesSupp && matchesComp && matchesStat && matchesDate) ? "" : "none";
            });
        });

        // Bottom action buttons
        document.getElementById('btnPrint').addEventListener('click', ()=> window.print());
        document.getElementById('btnClear').addEventListener('click', ()=>{
            ["searchBox","supplierFilter","companyFilter","statusFilter","startDate","endDate"].forEach(id=>{
                const el = document.getElementById(id);
                if(!el) return;
                if(el.tagName === "SELECT") el.selectedIndex = 0;
                else el.value = "";
            });
            document.getElementById('filterBtn').click();
        });
    </script>
}

@section Styles {
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
          crossorigin="anonymous" referrerpolicy="no-referrer" />
}
