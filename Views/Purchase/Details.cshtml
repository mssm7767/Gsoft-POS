@using System.Globalization
@model GSoftPosNew.Models.Purchase

@{
    ViewData["Title"] = "Purchase Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var culture = new CultureInfo("ur-PK");

    // Totals
    var subtotal = Model.Items.Sum(i => i.UnitCost * i.Quantity);
    var discount = Model.Items.Sum(i => i.UnitCost * i.Quantity * i.DiscountPercent / 100);
    var tax = Model.Items.Sum(i =>
        (i.UnitCost * i.Quantity - (i.UnitCost * i.Quantity * i.DiscountPercent / 100)) * i.TaxPercent / 100);
    var grandTotal = subtotal - discount + tax;
}

<div class="container my-4">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center border-bottom pb-3 mb-4">
        <h2 class="fw-bold text-primary mb-0">
            Purchase #@Model.Id
        </h2>
        <div>
            <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-outline-primary btn-sm me-2">
                <i class="fas fa-edit me-1"></i>Edit
            </a>
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary btn-sm">
                <i class="fas fa-arrow-left me-1"></i>Back
            </a>
        </div>
    </div>

    <!-- Info -->
    <div class="row mb-4">
        <div class="col-md-3">
            <small class="text-muted">Supplier</small>
            <p class="fw-semibold">@Model.Supplier?.SupplierName</p>
        </div>
        <div class="col-md-3">
            <small class="text-muted">Reference No</small>
            <p class="fw-semibold">@Model.ReferenceNo</p>
        </div>
        <div class="col-md-3">
            <small class="text-muted">Date</small>
            <p class="fw-semibold">@Model.Date.ToString("MMM dd, yyyy hh:mm tt")</p>
        </div>
        <div class="col-md-3">
            <small class="text-muted">Type</small>
            <p>
                <span class="badge rounded-pill @GetStatusBadgeClass(Model.PurchaseType)">
                    @Model.PurchaseType
                </span>
            </p>
        </div>
    </div>

    <!-- Items -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-body p-0">
            <table class="table table-borderless align-middle mb-0">
                <thead class="border-bottom bg-light">
                    <tr>
                        <th style="width:40px">#</th>
                        <th>Product</th>
                        <th class="text-end">Qty</th>
                        <th class="text-end">Unit Cost</th>
                        <th class="text-end">Discount</th>
                        <th class="text-end">Tax</th>
                        <th class="text-end">Line Total</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Items.Count; i++)
                    {
                        var item = Model.Items[i];
                        var gross = item.UnitCost * item.Quantity;
                        var lineDiscount = gross * item.DiscountPercent / 100;
                        var net = gross - lineDiscount;
                        var lineTax = net * item.TaxPercent / 100;
                        var lineTotal = net + lineTax;

                        <tr class="border-bottom">
                            <td>@(i + 1)</td>
                            <td>@item.Item?.ItemName</td>
                            <td class="text-end">@item.Quantity</td>
                            <td class="text-end">@item.UnitCost.ToString("C", culture)</td>
                            <td class="text-end">@lineDiscount.ToString("C", culture)</td>
                            <td class="text-end">@lineTax.ToString("C", culture)</td>
                            <td class="text-end fw-semibold">@lineTotal.ToString("C", culture)</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="5"></td>
                        <th class="text-end">Subtotal:</th>
                        <td class="text-end">@subtotal.ToString("C", culture)</td>
                    </tr>
                    <tr>
                        <td colspan="5"></td>
                        <th class="text-end">Discount:</th>
                        <td class="text-end text-danger">-@discount.ToString("C", culture)</td>
                    </tr>
                    <tr>
                        <td colspan="5"></td>
                        <th class="text-end">Tax:</th>
                        <td class="text-end">@tax.ToString("C", culture)</td>
                    </tr>
                    <tr class="border-top table-light">
                        <td colspan="5"></td>
                        <th class="text-end">Grand Total:</th>
                        <td class="text-end fw-bold fs-5 text-primary">@grandTotal.ToString("C", culture)</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <!-- Notes -->
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <h6 class="text-muted mb-2"><i class="fas fa-sticky-note me-1"></i> Notes</h6>
            <p class="mb-0">@(!string.IsNullOrWhiteSpace(Model.Notes) ? Model.Notes : "No notes available.")</p>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Paid" => "bg-success",
            "Pending" => "bg-warning text-dark",
            "Cancelled" => "bg-danger",
            _ => "bg-secondary",
        };
    }
}
